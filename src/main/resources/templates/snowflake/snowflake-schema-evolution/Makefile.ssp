#import(io.phdata.streamliner.schemadefiner.model.Snowflake)
#import(io.phdata.streamliner.schemadefiner.model.Jdbc)
<%@ val configurationDiff: io.phdata.streamliner.schemadefiner.model.ConfigurationDiff %>
<%@ val configuration: io.phdata.streamliner.schemadefiner.model.Configuration %>
<%@ val tableDiff: io.phdata.streamliner.schemadefiner.model.TableDiff %>
<%@ val typeMapping: Map[String, Map[String, String]]%>
<%@ val templateContext: io.phdata.streamliner.schemadefiner.model.TemplateContext %>
<%@ val currConfigFile: String%>
<%@ val prevStateDir: String%>
#{
    val destination = configurationDiff.currentDestination.asInstanceOf[Snowflake]
    val source = configuration.source.asInstanceOf[Jdbc]
    val validSchemaChanges = source.getValidSchemaChanges
}#
snowsql-cmd=${unescape(destination.snowSqlCommand)} -f

currTableStateFile=${currConfigFile}
previousStateDirectory=${prevStateDir}

alter-table-evolve-schema: alter-table-evolve-schema.sql
    $(snowsql-cmd) alter-table-evolve-schema.sql

copy-into: copy-into.sql
    $(snowsql-cmd) copy-into.sql

create-snowpipe: create-snowpipe.sql
    $(snowsql-cmd) create-snowpipe.sql

alter-snowpipe: alter-snowpipe.sql
    $(snowsql-cmd) alter-snowpipe.sql

incompatible-change: incompatible-change.sql
    $(snowsql-cmd) incompatible-change.sql

create-table: create-table.sql
    $(snowsql-cmd) create-table.sql

evolve-schema:
#if (tableDiff.existsInDestination && tableDiff.existsInSource)
    #if (!tableDiff.allChangesAreCompatible(typeMapping, validSchemaChanges))
	$(MAKE) incompatible-change
    <%
        templateContext.addError(s"Incompatible change in table ${destination.stagingDatabase.name}.${destination.stagingDatabase.schema}.${tableDiff.destinationName}. User should resolve this incompatible change manually as per the documentation. Template: snowflake-schema-evolution/Makefile.ssp")
    %>

    #elseif (tableDiff.allChangesAreCompatible(typeMapping, validSchemaChanges))
	$(MAKE) alter-table-evolve-schema
	$(MAKE) alter-snowpipe
	mv $(currTableStateFile) $(previousStateDirectory)

    #end
#elseif (tableDiff.existsInSource && !tableDiff.existsInDestination)
    #if (tableDiff.allChangesAreCompatible(typeMapping, validSchemaChanges))
        $(MAKE) create-table
        $(MAKE) create-snowpipe
        mv $(currTableStateFile) $(previousStateDirectory)
    #elseif (!tableDiff.allChangesAreCompatible(typeMapping, validSchemaChanges))
        $(MAKE) incompatible-change
        <%
            templateContext.addError(s"Incompatible change in table ${destination.stagingDatabase.name}.${destination.stagingDatabase.schema}.${tableDiff.destinationName}. User should resolve this incompatible change manually as per the documentation. Template: snowflake-schema-evolution/Makefile.ssp")
        %>
    #end

#end


